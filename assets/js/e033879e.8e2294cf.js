"use strict";(self.webpackChunkdocusaurus_site=self.webpackChunkdocusaurus_site||[]).push([[415],{2491:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"git","title":"Git","description":"GitHub","source":"@site/docs/git.md","sourceDirName":".","slug":"/git","permalink":"/proxmox/git","draft":false,"unlisted":false,"editUrl":"https://github.com/therepos/proxmox/edit/main/docs/git.md","tags":[],"version":"current","lastUpdatedAt":1749629191000,"frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Docker","permalink":"/proxmox/docker"},"next":{"title":"Markdown","permalink":"/proxmox/markdown"}}');var s=i(4848),t=i(8453);const l={},c="Git",d={},a=[{value:"GitHub",id:"github",level:2},{value:"Branching",id:"branching",level:3},{value:"Clone repo",id:"clone-repo",level:3},{value:"Set Git identity",id:"set-git-identity",level:3},{value:"Stage and commit",id:"stage-and-commit",level:3},{value:"Create branch",id:"create-branch",level:3},{value:"Merge changes",id:"merge-changes",level:3},{value:"Push to GHCR",id:"push-to-ghcr",level:3},{value:"github.dev",id:"githubdev",level:3},{value:"GitLab",id:"gitlab",level:2},{value:"Setup GitLab",id:"setup-gitlab",level:3},{value:"Setup Runner",id:"setup-runner",level:3},{value:"Update Default Email",id:"update-default-email",level:3},{value:"GitLab Web IDE",id:"gitlab-web-ide",level:3},{value:"Disable Auto DevOps",id:"disable-auto-devops",level:3},{value:"Pull from Container Registry",id:"pull-from-container-registry",level:3}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"git",children:"Git"})}),"\n",(0,s.jsx)(n.h2,{id:"github",children:"GitHub"}),"\n",(0,s.jsx)(n.h3,{id:"branching",children:"Branching"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"main"})," branch for production-ready stable codes."]}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"dev"})," branch for work-in-progress and versioning."]}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"github-pages"})," branch for static site publishing."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"clone-repo",children:"Clone repo"}),"\n",(0,s.jsx)(n.p,{children:"Clone a repository to local machine."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"git clone https://github.com/yourname/repo.git\ncd repo\n"})}),"\n",(0,s.jsx)(n.h3,{id:"set-git-identity",children:"Set Git identity"}),"\n",(0,s.jsx)(n.p,{children:"Create a mandatory Git identity."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'git config --global user.name "github-actions"\ngit config --global user.email "github-actions@github.com"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"stage-and-commit",children:"Stage and commit"}),"\n",(0,s.jsx)(n.p,{children:"Push changes from local machine to GitHub."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'git add .\ngit commit -m "Your message"\ngit push origin main\n'})}),"\n",(0,s.jsx)(n.h3,{id:"create-branch",children:"Create branch"}),"\n",(0,s.jsxs)(n.p,{children:["Create a branch from ",(0,s.jsx)(n.code,{children:"main"})," on local machine."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"git checkout main\ngit pull\ngit checkout -b dev\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If on github.dev: ",(0,s.jsx)(n.strong,{children:"Create branch"})," > ",(0,s.jsx)(n.em,{children:"dev from main"})]}),"\n",(0,s.jsx)(n.h3,{id:"merge-changes",children:"Merge changes"}),"\n",(0,s.jsxs)(n.p,{children:["Merge changes in ",(0,s.jsx)(n.code,{children:"dev"})," to ",(0,s.jsx)(n.code,{children:"main"})," on local machine."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"git checkout main\ngit merge dev\ngit push origin main\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If on github.dev: ",(0,s.jsx)(n.em,{children:"Pull Request > dev \u2192 main"})," > ",(0,s.jsx)(n.strong,{children:"Merge"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"push-to-ghcr",children:"Push to GHCR"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"GitHub > Settings > Developer Settings > Personal Access Tokens >"})," ",(0,s.jsx)(n.strong,{children:"Classic Token"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"echo <PAT> | docker login ghcr.io -u therepos --password-stdin\ndocker tag therepos/pdfai ghcr.io/therepos/pdfai:latest\ndocker push ghcr.io/therepos/pdfai:latest\n\ndocker logout ghcr.io\ndocker login ghcr.io --username therepos\n\ndocker build -t ghcr.io/therepos/pdfai:latest .\necho <PAT> | docker login ghcr.io -u therepos --password-stdin\ndocker push ghcr.io/therepos/pdfai:latest\n"})}),"\n",(0,s.jsx)(n.h3,{id:"githubdev",children:"github.dev"}),"\n",(0,s.jsx)(n.p,{children:"Useful keyboard shortcuts:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Search entire repository  : ",(0,s.jsx)("kbd",{children:"Shift"})," + ",(0,s.jsx)("kbd",{children:"Ctrl"})," + ",(0,s.jsx)("kbd",{children:"F"})]}),"\n",(0,s.jsxs)(n.li,{children:["Replace text              : ",(0,s.jsx)("kbd",{children:"Ctrl"})," + ",(0,s.jsx)("kbd",{children:"H"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"gitlab",children:"GitLab"}),"\n",(0,s.jsx)(n.h3,{id:"setup-gitlab",children:"Setup GitLab"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Deploy GitLab ",(0,s.jsx)(n.a,{href:"https://raw.githubusercontent.com/therepos/proxmox/main/docker/gitlab-docker-compose.yml",children:"docker compose"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Wait 3-5 minutes for database setup (important)."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Login with username (root) and password (initial_root_password)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker exec gitlab cat /etc/gitlab/initial_root_password\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"setup-runner",children:"Setup Runner"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"GitLab > Admin > CI/CD >"})," ",(0,s.jsx)(n.strong,{children:"Create Instance Runner"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a tag > Create Runner."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker exec -it gitlab-runner bash\ngitlab-runner register  --url http://gitlab:80  --token glrt-<token>\n"})}),"\n",(0,s.jsx)(n.p,{children:"Use default settings:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"url:          http://ip:3028\ndescription:  gitlab-runner\nexecutor:     docker\nimage:        docker:latest\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Edit configuration at ",(0,s.jsx)(n.code,{children:"/etc/gitlab-runner/config.toml"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'[runners.docker]\nimage = "docker:latest"\nprivileged = true\nvolumes = ["/var/run/docker.sock:/var/run/docker.sock"]\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Restart runner."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker restart gitlab-runner\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"update-default-email",children:"Update Default Email"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Enter the Rails console."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker exec -it gitlab bash\ngitlab-rails console\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Change username and email"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"user = User.find_by_username('username')\nuser.email = 'email@gmail.com'\nuser.skip_reconfirmation!\nuser.save!\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Restart GitLab"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker exec -it gitlab gitlab-ctl restart\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"gitlab-web-ide",children:"GitLab Web IDE"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"GitLab > Admin > Applications > GitLab Web IDE > Change to"})," ",(0,s.jsx)(n.strong,{children:"https"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"disable-auto-devops",children:"Disable Auto DevOps"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Settings > CI/CD >"})," ",(0,s.jsx)(n.strong,{children:"Auto DevOps : Turn Off"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"pull-from-container-registry",children:"Pull from Container Registry"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker login gitlabregistry.domain.com\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker pull gitlabregistry.domain.com/username/container:latest\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);