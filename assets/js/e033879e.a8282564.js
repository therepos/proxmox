"use strict";(self.webpackChunkdocusaurus_site=self.webpackChunkdocusaurus_site||[]).push([[415],{2491:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"git","title":"Git","description":"General","source":"@site/docs/git.md","sourceDirName":".","slug":"/git","permalink":"/proxmox/git","draft":false,"unlisted":false,"editUrl":"https://github.com/therepos/proxmox/edit/main/docs/git.md","tags":[],"version":"current","lastUpdatedAt":1748882506000,"frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Docker","permalink":"/proxmox/docker"},"next":{"title":"Markdown","permalink":"/proxmox/markdown"}}');var r=i(4848),s=i(8453);const l={},o="Git",c={},d=[{value:"General",id:"general",level:2},{value:"Clone GitHub repo",id:"clone-github-repo",level:3},{value:"Set Git identity in terminal",id:"set-git-identity-in-terminal",level:3},{value:"Stage and commit",id:"stage-and-commit",level:3},{value:"Push to GHCR",id:"push-to-ghcr",level:3},{value:"GitLab",id:"gitlab",level:2},{value:"Setup GitLab",id:"setup-gitlab",level:3},{value:"Setup Runner",id:"setup-runner",level:3},{value:"Update Default Email",id:"update-default-email",level:3},{value:"GitLab Web IDE",id:"gitlab-web-ide",level:3},{value:"Disable Auto DevOps",id:"disable-auto-devops",level:3},{value:"Setup SSH",id:"setup-ssh",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"git",children:"Git"})}),"\n",(0,r.jsx)(n.h2,{id:"general",children:"General"}),"\n",(0,r.jsx)(n.h3,{id:"clone-github-repo",children:"Clone GitHub repo"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git clone https://github.com/yourname/repo.git\ncd repo\n"})}),"\n",(0,r.jsx)(n.h3,{id:"set-git-identity-in-terminal",children:"Set Git identity in terminal"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'git config --global user.name "github-actions"\ngit config --global user.email "github-actions@github.com"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"stage-and-commit",children:"Stage and commit"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'git add .\ngit commit -m "Your message"\ngit push origin master\n'})}),"\n",(0,r.jsx)(n.h3,{id:"push-to-ghcr",children:"Push to GHCR"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"GitHub > Settings > Developer Settings > Personal Access Tokens > Classic Token."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"echo <PAT> | docker login ghcr.io -u therepos --password-stdin\ndocker tag therepos/pdfai ghcr.io/therepos/pdfai:latest\ndocker push ghcr.io/therepos/pdfai:latest\n\ndocker logout ghcr.io\ndocker login ghcr.io --username therepos\n\ndocker build -t ghcr.io/therepos/pdfai:latest .\necho <PAT> | docker login ghcr.io -u therepos --password-stdin\ndocker push ghcr.io/therepos/pdfai:latest\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"gitlab",children:"GitLab"}),"\n",(0,r.jsx)(n.h3,{id:"setup-gitlab",children:"Setup GitLab"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Deploy GitLab ",(0,r.jsx)(n.a,{href:"https://raw.githubusercontent.com/therepos/proxmox/main/docker/gitlab-docker-compose.yml",children:"docker compose"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Wait 3-5 minutes for database setup (important)."}),"\n",(0,r.jsxs)(n.li,{children:["Login with username (root) and password (initial_root_password).","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docker exec gitlab cat /etc/gitlab/initial_root_password\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"setup-runner",children:"Setup Runner"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"GitLab > Admin > CI/CD > Create Instance Runner."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Create a tag > Create Runner."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docker exec -it gitlab-runner bash\ngitlab-runner register  --url http://gitlab:80  --token glrt-<token>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"url:          http://gitlab:80\ndescription:  gitlab-runner\nexecutor:     docker\nimage:        alpine\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Info"}),": Configuration file is located at ",(0,r.jsx)(n.code,{children:"/etc/gitlab-runner/config.toml"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"update-default-email",children:"Update Default Email"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Enter the container."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docker exec -it gitlab bash\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Enter the Rails console."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"gitlab-rails console\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"You\u2019ll see a Ruby prompt like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"irb(main):001:0>\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Change username and email."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"user = User.find_by_username('username')\nuser.email = 'email@gmail.com'\nuser.skip_reconfirmation!\nuser.save!\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["To exit Ruby ",(0,r.jsx)(n.code,{children:"exit"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Restart GitLab"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docker exec -it gitlab gitlab-ctl restart\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"gitlab-web-ide",children:"GitLab Web IDE"}),"\n",(0,r.jsx)(n.p,{children:"GitLab > Admin > Applications > GitLab Web IDE > Change to https."}),"\n",(0,r.jsx)(n.h3,{id:"disable-auto-devops",children:"Disable Auto DevOps"}),"\n",(0,r.jsx)(n.p,{children:"Settings > CI/CD > Auto DevOps."}),"\n",(0,r.jsx)(n.h3,{id:"setup-ssh",children:"Setup SSH"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Generate an SSH Key on local machine."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'ssh-keygen -t ed25519 -C "your_email@example.com"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Press Enter to accept the default file location and passphrase (i.e. none)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cat ~/.ssh/id_ed25519\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Get the public key."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Get-Content $env:USERPROFILE\\.ssh\\id_ed25519.pub\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Login to GitLab interface."}),"\n",(0,r.jsx)(n.p,{children:"Profile Icon \u2192 Edit Profile \u2192 SSH Keys"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Configure Git Identity on Your Local Machine"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'git config --global user.name "Your Name"\ngit config --global user.email "your_email@example.com"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Clone the GitLab Project via SSH"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git clone git@gitlab.example.com:your-username/your-project.git\ncd your-project\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(6540);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);