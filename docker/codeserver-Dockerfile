# purpose: this dockerfile installs pyenv inside docker container
# use:
#  docker build -t mydockerimage .
#  docker login -u mydockerhubusername
#  docker tag mydockerimage mydockerhubusername/codeserver-pyenv:latest
#  docker push mydockerhubusername/codeserver-pyenv:latest
# save locally:
#  docker save -o codeserver-pyenv.tar codeserver-pyenv

# Use a lightweight Debian-based image
FROM debian:latest

# Set non-interactive mode to prevent tzdata prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install required dependencies for pyenv and code-server
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    bash \
    build-essential \
    zlib1g-dev \
    libssl-dev \
    libreadline-dev \
    libbz2-dev \
    libsqlite3-dev \
    libncurses5-dev \
    libffi-dev \
    liblzma-dev \
    python3-pip \
    tzdata && \
    ln -fs /usr/share/zoneinfo/$TZ /etc/localtime && \
    echo $TZ > /etc/timezone && \
    dpkg-reconfigure -f noninteractive tzdata && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Set up user for pyenv and code-server
RUN useradd -m -s /bin/bash coder

# Install pyenv for the "coder" user
USER coder
RUN curl https://pyenv.run | bash

# Set up environment variables for pyenv
ENV HOME=/home/coder
ENV PYENV_ROOT=$HOME/.pyenv
ENV PATH="$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH"

# Ensure pyenv is sourced in every shell session
RUN echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $HOME/.bashrc && \
    echo 'export PATH="$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH"' >> $HOME/.bashrc && \
    echo 'eval "$(pyenv init --path)"' >> $HOME/.bashrc && \
    echo 'eval "$(pyenv virtualenv-init -)"' >> $HOME/.bashrc

# Switch back to root for final setup
USER root

# Expose ports
EXPOSE 3024

# Set working directory
WORKDIR /workspace

# Command to keep container running
CMD ["bash", "-c", "source ~/.bashrc && tail -f /dev/null"]
